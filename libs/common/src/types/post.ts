// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v3.20.3
// source: post.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Post } from "./common";

export const protobufPackage = "post";

export interface CategoryId {
  id: number;
}

export interface CreatePostRequest {
  title: string;
  content: string;
  categories: CategoryId[];
}

export const POST_PACKAGE_NAME = "post";

export interface PostServiceClient {
  createPost(request: CreatePostRequest, metadata: Metadata, ...rest: any): Observable<Post>;
}

export interface PostServiceController {
  createPost(request: CreatePostRequest, metadata: Metadata, ...rest: any): Promise<Post> | Observable<Post> | Post;
}

export function PostServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createPost"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PostService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PostService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const POST_SERVICE_NAME = "PostService";
